name: Elixir CI and Docker Build

on: push

jobs:
  ci:
    runs-on: n100
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    services:
      db:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        otp: ['28']
        elixir: ['1.18.4']
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        shell: bash
        run: |
          mix local.rebar --force && mix local.hex --force
          mix deps.get

      - name: Run tests
        shell: bash
        run: |
          mix test

  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: n100
    needs:
      - ci
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v4"

      - name: Set tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Earthly v8
        run: |
          [[ ! -f /usr/local/bin/earthly ]] && \
            sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.8.13/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'

      - name: Build and push all platforms with Earthly
        run: |
          earthly +build-all-platforms